[tabel-source]
class = 'Annotation'
download = [
    'http://websail-fe.cs.northwestern.edu/TabEL/tables.json.gz',
]
path = 'data/TabEL'
fname = 'tables.json.gz'

[lookup-sqlite]
class = 'link.SQLiteLookup'
sqlite_kwargs = {timeout = 60.0}
sqlitedb = 'data/wdid_wpname.sqlitedb'
baseuri = 'http://www.wikidata.org/entity/Q'
extract = 'http://[^\.]+.wikipedia.org/wiki/([^?]+)'

[lookup]
class = 'link.DawgLookup'
path = 'data/wdid_wpname.dawg'
prefix = 'http://www.wikidata.org/entity/Q'
extract = 'http://[^\.]+.wikipedia.org/wiki/([^?]+)'

[linker]
resolve = 'wikidata-trident'


## Pipeline ##

[tabel]
path = 'hdfs://bricks07:9000/user/kruit/tabel/*'

[wikidump]
path = 'hdfs://bricks07:9000/user/kruit/wikidump-tables/*'

[[step]]
step = 'reshape'
restructure = true
prefix_header_rules = [{find='Precededby ', header='Preceded by'}, {find='Succeededby ', header='Succeeded by'}, {find='Previousrace:', header='Previous race'}, {find='Nextrace:', header='Next race'}]
# compound_splitter = {class = "reshape.SpacyCompoundSplitter"}
discard_headerless_tables = true

    [[step.unpivot_heuristics]]
    class = 'reshape.NumSuffix'
    min_len = 2

    [[step.unpivot_heuristics]]
    class = 'reshape.NumPrefix'
    min_len = 3

    [[step.unpivot_heuristics]]
    name = 'year-prefix'
    class = 'reshape.RegexFinder'
    pattern = '[\W\s]*(?P<val>(–|[0-9]{4}|present)+)[\W\s]*(?P<var>.*?)[\W\s]*$'

    [[step.unpivot_heuristics]]
    name = 'year-suffix'
    class = 'reshape.RegexFinder'
    pattern = '(?P<var>.*?)[\W\s]*(?P<val>(–|[0-9]{4}|present)+)[\W\s]*$'
    
    [[step.unpivot_heuristics]]
    name = 'short-uppercase-acronyms'
    class = 'reshape.RegexFinder'
    pattern = '(?P<var>[A-Z]{3,4})$'
    min_len = 3

    [[step.unpivot_heuristics]]
    name = 'time'
    class = 'reshape.RegexFinder'
    pattern = '(?P<var>.*?)[\W\s]*(?P<val>\d{1,2}:\d{2}[AP]M).*'

    [[step.unpivot_heuristics]]
    name = 'sports-round'
    class = 'reshape.RegexFinder'
    pattern = '(?P<val>(\d+|OT|Total|Final))$'
    min_len = 2

    [[step.unpivot_heuristics]]
    class = 'reshape.SpannedRepeat'
    
    [[step.unpivot_heuristics]]
    class = 'reshape.AgentLikeHyperlink'
    lookup = {resolve = 'lookup'}
    kb = {resolve = 'linker'}
    id_types = [
        'http://www.wikidata.org/entity/Q4167410', # disambiguation
        'http://www.wikidata.org/entity/Q13406463', # list
        'http://www.wikidata.org/entity/Q4167836', # category
        'http://www.wikidata.org/entity/Q47574', # unit of measurement
        'http://www.wikidata.org/entity/Q1790144', # unit of time
        'http://www.wikidata.org/entity/Q82047057', # UCUM derived unit
        'http://www.wikidata.org/entity/Q1924249', # measured quantity
        'http://www.wikidata.org/entity/Q107715', # physical quantity
        'http://www.wikidata.org/entity/Q28733284', # scalar magnitude
        'http://www.wikidata.org/entity/Q1949963', # statistic
        'http://www.wikidata.org/entity/Q22298551', # meteorological index
        'http://www.wikidata.org/entity/Q22298492', # hazard scale
        'http://www.wikidata.org/entity/Q2001982', # notation
        'http://www.wikidata.org/entity/Q28829877', # sports terminology
    ]
    id_props = [
        'http://www.wikidata.org/prop/direct/P1687', # main property
        'http://www.wikidata.org/prop/direct/P279', # subclass of
        'http://www.wikidata.org/prop/direct/P8111', # recommended unit of measurement
    ]
    allow_gap = 10

    [[step.unpivot_heuristics]]
    class = 'reshape.AttributeContext'
    attname = 'pgTitle'

    [[step.unpivot_heuristics]]
    class = 'reshape.Rule'
    name = 'poll'
    id_vars = ["Poll source", "Date(s) administered", "Sample size", "Margin of error"]

    [[step.unpivot_heuristics]]
    class = 'reshape.Rule'
    name = 'baseball'
    value_vars = ['1', '2', '3', '4', '5', '6', '7', '8', '9', 'R', 'H', 'E']

    [[step.unpivot_heuristics]]
    class = 'reshape.Rule'
    name = 'train-template'
    id_vars = ["Preceding station", "Following station"]

    [[step.unpivot_heuristics]]
    class = 'reshape.Rule'
    name = 'crater-template'
    id_vars = ["Latitude", "Longitude", "Diameter"]
    
    


[[step]]
step = 'cluster'
addcontext = ['pgTitle']
headerunions = true


[[step]]
step = 'filter'
filters = ['table["numDataRows"] > 10', 'len(table.provenance.get("concat", [])) > 1']

[[step]]
step = 'link'
lookup_cells = true
lookup = {resolve = 'lookup'}

    
[[step]]
step = 'coltypes'
    [step.typer]
    class = 'link.EntityTyper'
    db = {resolve = 'linker'}
    type_prop = 'http://www.wikidata.org/prop/direct/P31'
    supertype_prop = 'http://www.wikidata.org/prop/direct/P279'
    cover_threshold = 0.333

[[step]]
step = 'cluster'
addcontext = []
headerunions = false
agg_func = '@mean(  @max(headjacc, @pow(headvec, 4)), @max(bodylsh, @pow(bodyvec, 4), bodytype ) )'
agg_threshold = 0.98
#align_columns = 'max1' # much faster than 'greedy' but it sucks
edge_exp = 6
agg_threshold_col = 0.1
keep_partition_meta = ['_id', 'tableHeaders', 'tableData', 'entities', 'classes']
max_cluster_size = 250

    [[step.filters]]
    name  = 'headjacc' # use headjacc as both matcher and filter
    class = 'cluster.matchers.CellJaccMatcher'
    source = 'head'

    
    [[step.matchers]]
    name  = 'headjacc' # use headjacc as both matcher and filter
    class = 'cluster.matchers.CellJaccMatcher'
    source = 'head'
    
    [[step.matchers]]
    name  = 'headvec'
    class = 'cluster.matchers.EmbeddingMatcher'
    source = 'head'
    wordvec_fname = './data/glove.6B.50d.pickle'
    threshold = 0.5

    [[step.matchers]]
    name  = 'bodylsh'
    class = 'cluster.matchers.LSHMatcher'
    source = 'body'
    threshold = 0.5
    
    [[step.matchers]]
    name  = 'bodyvec'
    class = 'cluster.matchers.EmbeddingMatcher'
    source = 'body'
    wordvec_fname = './data/glove.6B.50d.pickle'
    threshold = 0.5
    
    [[step.matchers]]
    name  = 'bodytype'
    class = 'cluster.matchers.TypeCosMatcher'

[[step]]
step = 'link'
lookup_cells = true
lookup = {resolve = 'lookup'}

[[step]]
step = 'coltypes'
    [step.typer]
    class = 'link.EntityTyper'
    db = {resolve = 'linker'}
    type_prop = 'http://www.wikidata.org/prop/direct/P31'
    supertype_prop = ''
    cover_threshold = 0.333

[[step]]
step = 'integrate'
pfd_threshold = 0.95
db = {resolve = 'linker'}

[[step]]
step = 'triples'
